import platform
import os
from pyrogram.types import Message
from pyrogram import Client

VERSION = "1.0.0 (beta)"
IMAGE_PATH = "info.jpg"  # –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

# –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî —Å–ª–æ–≤–∞—Ä—å —Å ID –ø–æ user_id, –ª—É—á—à–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑—É –∏–ª–∏ —Ñ–∞–π–ª
user_message_ids = {}

async def info(client: Client, message: Message, args):
    me = await client.get_me()
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: username –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è
    if me.username:
        owner_name = f"@{me.username}"
    else:
        owner_name = f"{me.first_name} {me.last_name or ''}".strip()

    device_name = platform.node()
    os_name = platform.system()
    os_version = platform.release()

    info_text = (
        "üíôFORELKA Userbotüíô\n\n"
        f"üßë‚Äçüíª –í–ª–∞–¥–µ–ª–µ—Ü: {owner_name}\n"
        f"üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device_name}\n"
        f"üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {os_name} {os_version}\n"
        f"üöÄ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {VERSION}"
    )

    chat_id = message.chat.id
    user_id = message.from_user.id

    try:
        if user_id in user_message_ids:
            msg_id = user_message_ids[user_id]
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å —É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ
            await client.edit_message_caption(chat_id, msg_id, caption=info_text)
        else:
            if os.path.exists(IMAGE_PATH):
                sent_msg = await message.reply_photo(photo=IMAGE_PATH, caption=info_text)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ
                user_message_ids[user_id] = sent_msg.message_id
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ ‚Äî –ø—Ä–æ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.edit(info_text)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def register(app, commands, prefix, module_name):
    commands["info"] = {
        "func": info,
        "desc": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ —Å —Ñ–æ—Ç–æ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å",
        "module": module_name
    }