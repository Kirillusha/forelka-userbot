from pyrogram.types import Message
from pyrogram.enums import ParseMode

async def help_cmd(client, message: Message, args):
    commands = client._commands
    prefix = client.prefix
    modules = {}
    for cmd_name, info in commands.items():
        mod = info.get("module", "unknown")
        modules.setdefault(mod, []).append(cmd_name)

    text_lines = []
    text_lines.append(f"ü™ê {len(modules)} –º–æ–¥—É–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ:\n")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –º–æ–¥—É–ª–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ —Å–∫–æ–±–∫–∞—Ö
    for mod, cmds in sorted(modules.items()):
        cmds_sorted = sorted(cmds)
        cmds_str = " | ".join([f"{prefix}{cmd}" for cmd in cmds_sorted])
        text_lines.append(f"‚ñ™Ô∏è {mod}: ( {cmds_str} )")
    
    text = "\n".join(text_lines)

    try:
        await message.edit_text(text, parse_mode=ParseMode.HTML)
    except Exception:
        await message.reply(text, parse_mode=ParseMode.HTML)

def register(app, commands, prefix, module_name):
    commands["help"] = {
        "func": help_cmd,
        "desc": "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏",
        "module": module_name
    }
    app._commands = commands